
			// Control Instruction: Used to control or manage the execution flow of your program.

				C provides different control statments for that and these are..



							Control statments
							      |
						------------------------------
						|			      |
					Conditional CS			UnConditional CS
						|				|
				-------------------------------		----------------------------------
				|		|	     |		|	   |		|	  |
			   Decision	     Loop	   Case	       goto      break      continue     return 
			    |		      |		    |	
			- if()		    - for()	  switch()
			- if() else	    - while()
			- Nesting	    - do while()
			- Ladder
 

	conditional control statments: needs the condition for working.

	unconditional control statments: Does not need any condition to work



//----------------------------------------------------------------------------------------------------------------------------


	//  Decision Conditional Control statment: 

	
			// Using if(): used to decide, execute the block of code or not. That block is mentioned in the program as

			syntax:
				if(<condi>)
				{
					-------------;
					-------------;
					block of code;
					-------------;
					-------------;
				}
				
		- Block of code will be executed only when the condition is true otherwise it will be skipped
	

// Enter the number and display the entered number is even or odd

int main()
{
	int no;

	printf("\n Emter the no: ");
	scanf("%d",&no);

	if(no%2==0)
	{
		printf("\n No: %d is Even",no);
	}

	if(no%2!=0)
	{
		printf("\n No: %d is Odd",no);
	}

	return 0;
}

//-----------------------------------------------------------------------------------

     // WAP to enter price of 3 items and calc the discount. (discount is 7% when amount exceeds 500)

int main()
{
    float p1,p2,p3,tot,dis=0.0;

    printf("\n Enter the price of 3 items: ");
    scanf("%f %f %f",&p1,&p2,&p3);

    tot=p1+p2+p3;
    if(tot>500)
    {
        dis=tot*0.07;
    }
    printf("\n Total Bill: %f",tot);
    printf("\n Discount: %f",dis);
    printf("\n Pay Rs: %0.2f",(tot-dis));

    return 0;
}


//-----------------------------------------------------------------------------------


	// Using if() else: It is used when you want to execute any one code block from two different blocks
	//		    according to condition.


		syntax:
			if(<condi>)
			{
				-----------------;
				---------------;
				----------------;
			}
			else 
			{
				-----------------;
				---------------;
				----------------;
			}

		when <condi> is  TRUE --> will execute the if() block only
				 FALSE -> will execute the else block only


    // Using if() else


// Enter the number and display the entered number is even or odd (using if() esle)

int main()
{
	int no;

	printf("\n Emter the no: ");
	scanf("%d",&no);

	if(no%2==0)
	{
		printf("\n No: %d is Even",no);
	}
	else
	{
		printf("\n No: %d is Odd",no);
	}

	return 0;
}

//-----------------------------------------------------------------------------------

   // WAP to enter price of 3 items and calc the discount. (discount is 7% when amount exceeds 500 otherwise 3%)
*/
int main()
{
    float p1,p2,p3,tot,dis=0.0;

    printf("\n Enter the price of 3 items: ");
    scanf("%f %f %f",&p1,&p2,&p3);

    tot=p1+p2+p3;
    if(tot>500)
    {
        printf("Discount is 7%%");
        dis=tot*0.07;
    }
    else
    {
        printf("Discount is 3%%");
        dis=tot*0.03;
    }
    printf("\n Total Bill: %f",tot);
    printf("\n Discount: %f",dis);
    printf("\n Pay Rs: %0.2f",(tot-dis));

    return 0;
}


	Notes: 
		- when if() or else or both contains only one statement the {} are optional. 
		  coz both considers 1 stat. within it bydefault.

		- Only if() can be used but only else can not be used.

		- else dont have any condition in any case.

		- In if() else, else must but just after cmp of if(). No any statement allowed in between.
	
		- if() and else, both does not ends with ;. If you use ; at last then it will acts as a null statement.


// ----------------------------------------------------------------------------------------------------------------------------------------
